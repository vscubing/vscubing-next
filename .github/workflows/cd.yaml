name: CD

on:
  workflow_dispatch:
  push:
    branches: [main, dev]

concurrency:
  group: cd-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  CD:
    environment: ${{ github.ref_name == 'main' && 'production' || 'staging' }}
    runs-on: blacksmith-2vcpu-ubuntu-2204
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        
      - name: Populate .env file
        run: |
          cat <<EOF > .env
          NEXT_PUBLIC_APP_ENV=${{ vars.NEXT_PUBLIC_APP_ENV }}
          NEXT_PUBLIC_POSTHOG_KEY=${{ vars.NEXT_PUBLIC_POSTHOG_KEY }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          AUTH_SECRET=${{ secrets.AUTH_SECRET }}
          AUTH_GOOGLE_CLIENT_ID=${{ secrets.AUTH_GOOGLE_CLIENT_ID }}
          AUTH_GOOGLE_CLIENT_SECRET=${{ secrets.AUTH_GOOGLE_CLIENT_SECRET }}
          AUTH_GOOGLE_URL=${{ vars.AUTH_GOOGLE_URL }}
          AUTH_WCA_CLIENT_ID=${{ secrets.AUTH_WCA_CLIENT_ID }}
          AUTH_WCA_CLIENT_SECRET=${{ secrets.AUTH_WCA_CLIENT_SECRET }}
          AUTH_WCA_URL=${{ vars.AUTH_WCA_URL }}
          TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_CONTEST_MANAGEMENT_THREAD_ID=${{ secrets.TELEGRAM_CONTEST_MANAGEMENT_THREAD_ID }}
          CONTEST_CREATION_WEBHOOK_SECRET=${{ secrets.CONTEST_CREATION_WEBHOOK_SECRET }}
          CONTEST_CREATION_WEBHOOK_URL=${{ vars.CONTEST_CREATION_WEBHOOK_URL }}
          EOF

      - name: Set Docker timestamp tag
        id: date
        run: echo "DATE_STAMP=$(date +'%Y-%m-%d_%H-%M-%S')" > "$GITHUB_ENV"

      - name: Set Docker environment tag
        id: tag
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "ENV_TAG=production" > $GITHUB_ENV
          else
            echo "ENV_TAG=staging" > $GITHUB_ENV
          fi;

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.ENV_TAG }}
            ${{ env.IMAGE_NAME }}:${{ env.DATE_STAMP }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Dokploy
        run: | 
          curl --request GET '${{ secrets.DOKPLOY_WEBHOOK }}'
